"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nativescript_oauth2_1 = require("nativescript-oauth2");
var providers_1 = require("nativescript-oauth2/providers");
function configureOAuthProviders() {
    var microsoftProvider = this.configureOAuthProviderMicrosoft();
    var googleProvider = this.configureOAuthProviderGoogle();
    var facebookProvider = this.configureOAuthProviderFacebook();
    nativescript_oauth2_1.configureTnsOAuth([microsoftProvider, googleProvider, facebookProvider]);
}
exports.configureOAuthProviders = configureOAuthProviders;
function configureOAuthProviderGoogle() {
    var googleProviderOptions = {
        openIdSupport: "oid-full",
        clientId: "932931520457-buv2dnhgo7jjjjv5fckqltn367psbrlb.apps.googleusercontent.com",
        redirectUri: "com.googleusercontent.apps.932931520457-buv2dnhgo7jjjjv5fckqltn367psbrlb:/auth",
        urlScheme: "com.googleusercontent.apps.932931520457-buv2dnhgo7jjjjv5fckqltn367psbrlb",
        scopes: ["email"]
    };
    var googleProvider = new providers_1.TnsOaProviderGoogle(googleProviderOptions);
    return googleProvider;
}
exports.configureOAuthProviderGoogle = configureOAuthProviderGoogle;
function configureOAuthProviderFacebook() {
    var facebookProviderOptions = {
        openIdSupport: "oid-none",
        clientId: "307579856758121",
        clientSecret: "94c8577208b74ac95a7b9647ecda417a",
        redirectUri: "https://www.facebook.com/connect/login_success.html",
        scopes: ["email", "user_friends"]
    };
    var facebookProvider = new providers_1.TnsOaProviderFacebook(facebookProviderOptions);
    return facebookProvider;
}
exports.configureOAuthProviderFacebook = configureOAuthProviderFacebook;
function configureOAuthProviderMicrosoft() {
    var microsoftProviderOptions = {
        openIdSupport: "oid-full",
        clientId: "f376fa87-64a9-49a1-8b56-e0d48fc0810b",
        // redirectUri: "urn:ietf:wg:oauth:2.0:oob",
        redirectUri: "msalf376fa87-64a9-49a1-8b56-e0d48fc0810b://auth",
        urlScheme: "msalf376fa87-64a9-49a1-8b56-e0d48fc0810b",
        scopes: ['openid', "https://outlook.office.com/mail.read"]
    };
    var microsoftProvider = new providers_1.TnsOaProviderMicrosoft(microsoftProviderOptions);
    return microsoftProvider;
}
exports.configureOAuthProviderMicrosoft = configureOAuthProviderMicrosoft;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1wcm92aWRlcnMtaGVscGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXV0aC1wcm92aWRlcnMtaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBSTZCO0FBQzdCLDJEQVF1QztBQUV2QyxTQUFnQix1QkFBdUI7SUFDbkMsSUFBTSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsK0JBQStCLEVBQUUsQ0FBQztJQUNqRSxJQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztJQUMzRCxJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyw4QkFBOEIsRUFBRSxDQUFDO0lBRS9ELHVDQUFpQixDQUFDLENBQUMsaUJBQWlCLEVBQUUsY0FBYyxFQUFFLGdCQUFnQixDQUFDLENBQUMsQ0FBQztBQUM3RSxDQUFDO0FBTkQsMERBTUM7QUFFRCxTQUFnQiw0QkFBNEI7SUFDeEMsSUFBTSxxQkFBcUIsR0FBK0I7UUFDdEQsYUFBYSxFQUFFLFVBQVU7UUFDekIsUUFBUSxFQUNKLDBFQUEwRTtRQUM5RSxXQUFXLEVBQ1AsZ0ZBQWdGO1FBQ3BGLFNBQVMsRUFDTCwwRUFBMEU7UUFDOUUsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDO0tBQ3BCLENBQUM7SUFDRixJQUFNLGNBQWMsR0FBRyxJQUFJLCtCQUFtQixDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDdEUsT0FBTyxjQUFjLENBQUM7QUFDMUIsQ0FBQztBQWJELG9FQWFDO0FBRUQsU0FBZ0IsOEJBQThCO0lBQzFDLElBQU0sdUJBQXVCLEdBQWlDO1FBQzFELGFBQWEsRUFBRSxVQUFVO1FBQ3pCLFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsWUFBWSxFQUFFLGtDQUFrQztRQUNoRCxXQUFXLEVBQUUscURBQXFEO1FBQ2xFLE1BQU0sRUFBRSxDQUFDLE9BQU8sRUFBQyxjQUFjLENBQUM7S0FDbkMsQ0FBQztJQUNGLElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxpQ0FBcUIsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQzVFLE9BQU8sZ0JBQWdCLENBQUM7QUFDNUIsQ0FBQztBQVZELHdFQVVDO0FBRUQsU0FBZ0IsK0JBQStCO0lBQzNDLElBQU0sd0JBQXdCLEdBQWtDO1FBQzVELGFBQWEsRUFBRSxVQUFVO1FBQ3pCLFFBQVEsRUFBRSxzQ0FBc0M7UUFDaEQsNENBQTRDO1FBQzVDLFdBQVcsRUFBRSxpREFBaUQ7UUFDOUQsU0FBUyxFQUFFLDBDQUEwQztRQUNyRCxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUUsc0NBQXNDLENBQUM7S0FDN0QsQ0FBQztJQUNGLElBQU0saUJBQWlCLEdBQUcsSUFBSSxrQ0FBc0IsQ0FDaEQsd0JBQXdCLENBQzNCLENBQUM7SUFDRixPQUFPLGlCQUFpQixDQUFDO0FBQzdCLENBQUM7QUFiRCwwRUFhQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgVG5zT0F1dGhDbGllbnQsXG4gICAgY29uZmlndXJlVG5zT0F1dGgsXG4gICAgSVRuc09BdXRoVG9rZW5SZXN1bHRcbn0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1vYXV0aDJcIjtcbmltcG9ydCB7XG4gICAgVG5zT2FQcm92aWRlcixcbiAgICBUbnNPYVByb3ZpZGVyT3B0aW9uc0ZhY2Vib29rLFxuICAgIFRuc09hUHJvdmlkZXJGYWNlYm9vayxcbiAgICBUbnNPYVByb3ZpZGVyT3B0aW9uc0dvb2dsZSxcbiAgICBUbnNPYVByb3ZpZGVyR29vZ2xlLFxuICAgIFRuc09hUHJvdmlkZXJPcHRpb25zTWljcm9zb2Z0LFxuICAgIFRuc09hUHJvdmlkZXJNaWNyb3NvZnRcbn0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1vYXV0aDIvcHJvdmlkZXJzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVPQXV0aFByb3ZpZGVycygpIHtcbiAgICBjb25zdCBtaWNyb3NvZnRQcm92aWRlciA9IHRoaXMuY29uZmlndXJlT0F1dGhQcm92aWRlck1pY3Jvc29mdCgpO1xuICAgIGNvbnN0IGdvb2dsZVByb3ZpZGVyID0gdGhpcy5jb25maWd1cmVPQXV0aFByb3ZpZGVyR29vZ2xlKCk7XG4gICAgY29uc3QgZmFjZWJvb2tQcm92aWRlciA9IHRoaXMuY29uZmlndXJlT0F1dGhQcm92aWRlckZhY2Vib29rKCk7XG5cbiAgICBjb25maWd1cmVUbnNPQXV0aChbbWljcm9zb2Z0UHJvdmlkZXIsIGdvb2dsZVByb3ZpZGVyLCBmYWNlYm9va1Byb3ZpZGVyXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVPQXV0aFByb3ZpZGVyR29vZ2xlKCk6IFRuc09hUHJvdmlkZXIge1xuICAgIGNvbnN0IGdvb2dsZVByb3ZpZGVyT3B0aW9uczogVG5zT2FQcm92aWRlck9wdGlvbnNHb29nbGUgPSB7XG4gICAgICAgIG9wZW5JZFN1cHBvcnQ6IFwib2lkLWZ1bGxcIixcbiAgICAgICAgY2xpZW50SWQ6XG4gICAgICAgICAgICBcIjkzMjkzMTUyMDQ1Ny1idXYyZG5oZ283ampqanY1ZmNrcWx0bjM2N3BzYnJsYi5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbVwiLFxuICAgICAgICByZWRpcmVjdFVyaTpcbiAgICAgICAgICAgIFwiY29tLmdvb2dsZXVzZXJjb250ZW50LmFwcHMuOTMyOTMxNTIwNDU3LWJ1djJkbmhnbzdqampqdjVmY2txbHRuMzY3cHNicmxiOi9hdXRoXCIsXG4gICAgICAgIHVybFNjaGVtZTpcbiAgICAgICAgICAgIFwiY29tLmdvb2dsZXVzZXJjb250ZW50LmFwcHMuOTMyOTMxNTIwNDU3LWJ1djJkbmhnbzdqampqdjVmY2txbHRuMzY3cHNicmxiXCIsXG4gICAgICAgIHNjb3BlczogW1wiZW1haWxcIl1cbiAgICB9O1xuICAgIGNvbnN0IGdvb2dsZVByb3ZpZGVyID0gbmV3IFRuc09hUHJvdmlkZXJHb29nbGUoZ29vZ2xlUHJvdmlkZXJPcHRpb25zKTtcbiAgICByZXR1cm4gZ29vZ2xlUHJvdmlkZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVPQXV0aFByb3ZpZGVyRmFjZWJvb2soKTogVG5zT2FQcm92aWRlciB7XG4gICAgY29uc3QgZmFjZWJvb2tQcm92aWRlck9wdGlvbnM6IFRuc09hUHJvdmlkZXJPcHRpb25zRmFjZWJvb2sgPSB7XG4gICAgICAgIG9wZW5JZFN1cHBvcnQ6IFwib2lkLW5vbmVcIixcbiAgICAgICAgY2xpZW50SWQ6IFwiMzA3NTc5ODU2NzU4MTIxXCIsXG4gICAgICAgIGNsaWVudFNlY3JldDogXCI5NGM4NTc3MjA4Yjc0YWM5NWE3Yjk2NDdlY2RhNDE3YVwiLFxuICAgICAgICByZWRpcmVjdFVyaTogXCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vY29ubmVjdC9sb2dpbl9zdWNjZXNzLmh0bWxcIixcbiAgICAgICAgc2NvcGVzOiBbXCJlbWFpbFwiLFwidXNlcl9mcmllbmRzXCJdXG4gICAgfTtcbiAgICBjb25zdCBmYWNlYm9va1Byb3ZpZGVyID0gbmV3IFRuc09hUHJvdmlkZXJGYWNlYm9vayhmYWNlYm9va1Byb3ZpZGVyT3B0aW9ucyk7XG4gICAgcmV0dXJuIGZhY2Vib29rUHJvdmlkZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVPQXV0aFByb3ZpZGVyTWljcm9zb2Z0KCk6IFRuc09hUHJvdmlkZXIge1xuICAgIGNvbnN0IG1pY3Jvc29mdFByb3ZpZGVyT3B0aW9uczogVG5zT2FQcm92aWRlck9wdGlvbnNNaWNyb3NvZnQgPSB7XG4gICAgICAgIG9wZW5JZFN1cHBvcnQ6IFwib2lkLWZ1bGxcIixcbiAgICAgICAgY2xpZW50SWQ6IFwiZjM3NmZhODctNjRhOS00OWExLThiNTYtZTBkNDhmYzA4MTBiXCIsXG4gICAgICAgIC8vIHJlZGlyZWN0VXJpOiBcInVybjppZXRmOndnOm9hdXRoOjIuMDpvb2JcIixcbiAgICAgICAgcmVkaXJlY3RVcmk6IFwibXNhbGYzNzZmYTg3LTY0YTktNDlhMS04YjU2LWUwZDQ4ZmMwODEwYjovL2F1dGhcIixcbiAgICAgICAgdXJsU2NoZW1lOiBcIm1zYWxmMzc2ZmE4Ny02NGE5LTQ5YTEtOGI1Ni1lMGQ0OGZjMDgxMGJcIixcbiAgICAgICAgc2NvcGVzOiBbJ29wZW5pZCcsIFwiaHR0cHM6Ly9vdXRsb29rLm9mZmljZS5jb20vbWFpbC5yZWFkXCJdXG4gICAgfTtcbiAgICBjb25zdCBtaWNyb3NvZnRQcm92aWRlciA9IG5ldyBUbnNPYVByb3ZpZGVyTWljcm9zb2Z0KFxuICAgICAgICBtaWNyb3NvZnRQcm92aWRlck9wdGlvbnNcbiAgICApO1xuICAgIHJldHVybiBtaWNyb3NvZnRQcm92aWRlcjtcbn0iXX0=